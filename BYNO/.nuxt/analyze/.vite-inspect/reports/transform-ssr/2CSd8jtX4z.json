{
  "resolvedId": "C:/Users/Anna/Documents/projets-web/BYNO/BYNO/node_modules/nuxt/dist/app/composables/payload.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { hasProtocol, joinURL, withoutTrailingSlash } from \"ufo\";\r\nimport { parse } from \"devalue\";\r\nimport { useHead } from \"@unhead/vue\";\r\nimport { getCurrentInstance } from \"vue\";\r\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\r\nimport { useRoute } from \"./router.js\";\r\nimport { getAppManifest, getRouteRules } from \"./manifest.js\";\r\nimport { appManifest, payloadExtraction, renderJsonPayloads } from \"#build/nuxt.config.mjs\";\r\nexport function loadPayload(url, opts = {}) {\r\n  if (import.meta.server || !payloadExtraction) {\r\n    return null;\r\n  }\r\n  const payloadURL = _getPayloadURL(url, opts);\r\n  const nuxtApp = useNuxtApp();\r\n  const cache = nuxtApp._payloadCache = nuxtApp._payloadCache || {};\r\n  if (payloadURL in cache) {\r\n    return cache[payloadURL];\r\n  }\r\n  cache[payloadURL] = isPrerendered(url).then((prerendered) => {\r\n    if (!prerendered) {\r\n      cache[payloadURL] = null;\r\n      return null;\r\n    }\r\n    return _importPayload(payloadURL).then((payload) => {\r\n      if (payload) {\r\n        return payload;\r\n      }\r\n      delete cache[payloadURL];\r\n      return null;\r\n    });\r\n  });\r\n  return cache[payloadURL];\r\n}\r\nexport function preloadPayload(url, opts = {}) {\r\n  const payloadURL = _getPayloadURL(url, opts);\r\n  useHead({\r\n    link: [\r\n      { rel: \"modulepreload\", href: payloadURL }\r\n    ]\r\n  });\r\n}\r\nconst extension = renderJsonPayloads ? \"json\" : \"js\";\r\nfunction _getPayloadURL(url, opts = {}) {\r\n  const u = new URL(url, \"http://localhost\");\r\n  if (u.host !== \"localhost\" || hasProtocol(u.pathname, { acceptRelative: true })) {\r\n    throw new Error(\"Payload URL must not include hostname: \" + url);\r\n  }\r\n  const hash = opts.hash || (opts.fresh ? Date.now() : \"\");\r\n  return joinURL(useRuntimeConfig().app.baseURL, u.pathname, hash ? `_payload.${hash}.${extension}` : `_payload.${extension}`);\r\n}\r\nasync function _importPayload(payloadURL) {\r\n  if (import.meta.server || !payloadExtraction) {\r\n    return null;\r\n  }\r\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL).then((res) => res.text().then(parsePayload)) : import(\r\n    /* webpackIgnore: true */\r\n    /* @vite-ignore */\r\n    payloadURL\r\n  ).then((r) => r.default || r);\r\n  try {\r\n    return await payloadPromise;\r\n  } catch (err) {\r\n    console.warn(\"[nuxt] Cannot load payload \", payloadURL, err);\r\n  }\r\n  return null;\r\n}\r\nexport async function isPrerendered(url = useRoute().path) {\r\n  if (!appManifest) {\r\n    return !!useNuxtApp().payload.prerenderedAt;\r\n  }\r\n  url = withoutTrailingSlash(url);\r\n  const manifest = await getAppManifest();\r\n  if (manifest.prerendered.includes(url)) {\r\n    return true;\r\n  }\r\n  const rules = await getRouteRules(url);\r\n  return !!rules.prerender && !rules.redirect;\r\n}\r\nlet payloadCache = null;\r\nexport async function getNuxtClientPayload() {\r\n  if (import.meta.server) {\r\n    return;\r\n  }\r\n  if (payloadCache) {\r\n    return payloadCache;\r\n  }\r\n  const el = document.getElementById(\"__NUXT_DATA__\");\r\n  if (!el) {\r\n    return {};\r\n  }\r\n  const inlineData = await parsePayload(el.textContent || \"\");\r\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\r\n  payloadCache = {\r\n    ...inlineData,\r\n    ...externalData,\r\n    ...window.__NUXT__\r\n  };\r\n  return payloadCache;\r\n}\r\nexport async function parsePayload(payload) {\r\n  return await parse(payload, useNuxtApp()._payloadRevivers);\r\n}\r\nexport function definePayloadReducer(name, reduce) {\r\n  if (import.meta.server) {\r\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\r\n  }\r\n}\r\nexport function definePayloadReviver(name, revive) {\r\n  if (import.meta.dev && getCurrentInstance()) {\r\n    console.warn(\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\");\r\n  }\r\n  if (import.meta.client) {\r\n    useNuxtApp()._payloadRevivers[name] = revive;\r\n  }\r\n}\r\n",
      "start": 1716369332318,
      "end": 1716369332410,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716369332410,
      "end": 1716369332410,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716369332410,
      "end": 1716369332410,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716369332410,
      "end": 1716369332410,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716369332410,
      "end": 1716369332410,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716369332411,
      "end": 1716369332411,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { hasProtocol, joinURL, withoutTrailingSlash } from \"ufo\";\r\nimport { parse } from \"devalue\";\r\nimport { useHead } from \"@unhead/vue\";\r\nimport { getCurrentInstance } from \"vue\";\r\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\r\nimport { useRoute } from \"./router.js\";\r\nimport { getAppManifest, getRouteRules } from \"./manifest.js\";\r\nimport { appManifest, payloadExtraction, renderJsonPayloads } from \"#build/nuxt.config.mjs\";\r\nexport function loadPayload(url, opts = {}) {\r\n  if (true || !payloadExtraction) {\r\n    return null;\r\n  }\r\n  const payloadURL = _getPayloadURL(url, opts);\r\n  const nuxtApp = useNuxtApp();\r\n  const cache = nuxtApp._payloadCache = nuxtApp._payloadCache || {};\r\n  if (payloadURL in cache) {\r\n    return cache[payloadURL];\r\n  }\r\n  cache[payloadURL] = isPrerendered(url).then((prerendered) => {\r\n    if (!prerendered) {\r\n      cache[payloadURL] = null;\r\n      return null;\r\n    }\r\n    return _importPayload(payloadURL).then((payload) => {\r\n      if (payload) {\r\n        return payload;\r\n      }\r\n      delete cache[payloadURL];\r\n      return null;\r\n    });\r\n  });\r\n  return cache[payloadURL];\r\n}\r\nexport function preloadPayload(url, opts = {}) {\r\n  const payloadURL = _getPayloadURL(url, opts);\r\n  useHead({\r\n    link: [\r\n      { rel: \"modulepreload\", href: payloadURL }\r\n    ]\r\n  });\r\n}\r\nconst extension = renderJsonPayloads ? \"json\" : \"js\";\r\nfunction _getPayloadURL(url, opts = {}) {\r\n  const u = new URL(url, \"http://localhost\");\r\n  if (u.host !== \"localhost\" || hasProtocol(u.pathname, { acceptRelative: true })) {\r\n    throw new Error(\"Payload URL must not include hostname: \" + url);\r\n  }\r\n  const hash = opts.hash || (opts.fresh ? Date.now() : \"\");\r\n  return joinURL(useRuntimeConfig().app.baseURL, u.pathname, hash ? `_payload.${hash}.${extension}` : `_payload.${extension}`);\r\n}\r\nasync function _importPayload(payloadURL) {\r\n  if (true || !payloadExtraction) {\r\n    return null;\r\n  }\r\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL).then((res) => res.text().then(parsePayload)) : import(\r\n    /* webpackIgnore: true */\r\n    /* @vite-ignore */\r\n    payloadURL\r\n  ).then((r) => r.default || r);\r\n  try {\r\n    return await payloadPromise;\r\n  } catch (err) {\r\n    console.warn(\"[nuxt] Cannot load payload \", payloadURL, err);\r\n  }\r\n  return null;\r\n}\r\nexport async function isPrerendered(url = useRoute().path) {\r\n  if (!appManifest) {\r\n    return !!useNuxtApp().payload.prerenderedAt;\r\n  }\r\n  url = withoutTrailingSlash(url);\r\n  const manifest = await getAppManifest();\r\n  if (manifest.prerendered.includes(url)) {\r\n    return true;\r\n  }\r\n  const rules = await getRouteRules(url);\r\n  return !!rules.prerender && !rules.redirect;\r\n}\r\nlet payloadCache = null;\r\nexport async function getNuxtClientPayload() {\r\n  if (true) {\r\n    return;\r\n  }\r\n  if (payloadCache) {\r\n    return payloadCache;\r\n  }\r\n  const el = document.getElementById(\"__NUXT_DATA__\");\r\n  if (!el) {\r\n    return {};\r\n  }\r\n  const inlineData = await parsePayload(el.textContent || \"\");\r\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\r\n  payloadCache = {\r\n    ...inlineData,\r\n    ...externalData,\r\n    ...window.__NUXT__\r\n  };\r\n  return payloadCache;\r\n}\r\nexport async function parsePayload(payload) {\r\n  return await parse(payload, useNuxtApp()._payloadRevivers);\r\n}\r\nexport function definePayloadReducer(name, reduce) {\r\n  if (true) {\r\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\r\n  }\r\n}\r\nexport function definePayloadReviver(name, revive) {\r\n  if (false && getCurrentInstance()) {\r\n    console.warn(\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\");\r\n  }\r\n  if (false) {\r\n    useNuxtApp()._payloadRevivers[name] = revive;\r\n  }\r\n}\r\n",
      "start": 1716369332412,
      "end": 1716369332413,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvxkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChI,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjvH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAkB,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAkrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjK,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1716369332413,
      "end": 1716369332414,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { hasProtocol, joinURL, withoutTrailingSlash } from \"ufo\";\nimport { parse } from \"devalue\";\nimport { useHead } from \"@unhead/vue\";\nimport { getCurrentInstance } from \"vue\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { useRoute } from \"./router.js\";\nimport { getAppManifest, getRouteRules } from \"./manifest.js\";\nimport { appManifest, payloadExtraction, renderJsonPayloads } from \"#build/nuxt.config.mjs\";\nexport function loadPayload(url, opts = {}) {\n  if (true) {\n    return null;\n  }\n  const payloadURL = _getPayloadURL(url, opts);\n  const nuxtApp = useNuxtApp();\n  const cache = nuxtApp._payloadCache = nuxtApp._payloadCache || {};\n  if (payloadURL in cache) {\n    return cache[payloadURL];\n  }\n  cache[payloadURL] = isPrerendered(url).then((prerendered) => {\n    if (!prerendered) {\n      cache[payloadURL] = null;\n      return null;\n    }\n    return _importPayload(payloadURL).then((payload) => {\n      if (payload) {\n        return payload;\n      }\n      delete cache[payloadURL];\n      return null;\n    });\n  });\n  return cache[payloadURL];\n}\nexport function preloadPayload(url, opts = {}) {\n  const payloadURL = _getPayloadURL(url, opts);\n  useHead({\n    link: [\n      { rel: \"modulepreload\", href: payloadURL }\n    ]\n  });\n}\nconst extension = renderJsonPayloads ? \"json\" : \"js\";\nfunction _getPayloadURL(url, opts = {}) {\n  const u = new URL(url, \"http://localhost\");\n  if (u.host !== \"localhost\" || hasProtocol(u.pathname, { acceptRelative: true })) {\n    throw new Error(\"Payload URL must not include hostname: \" + url);\n  }\n  const hash = opts.hash || (opts.fresh ? Date.now() : \"\");\n  return joinURL(useRuntimeConfig().app.baseURL, u.pathname, hash ? `_payload.${hash}.${extension}` : `_payload.${extension}`);\n}\nasync function _importPayload(payloadURL) {\n  if (true) {\n    return null;\n  }\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL).then((res) => res.text().then(parsePayload)) : import(\n    /* webpackIgnore: true */\n    /* @vite-ignore */\n    payloadURL\n  ).then((r) => r.default || r);\n  try {\n    return await payloadPromise;\n  } catch (err) {\n    console.warn(\"[nuxt] Cannot load payload \", payloadURL, err);\n  }\n  return null;\n}\nexport async function isPrerendered(url = useRoute().path) {\n  if (!appManifest) {\n    return !!useNuxtApp().payload.prerenderedAt;\n  }\n  url = withoutTrailingSlash(url);\n  const manifest = await getAppManifest();\n  if (manifest.prerendered.includes(url)) {\n    return true;\n  }\n  const rules = await getRouteRules(url);\n  return !!rules.prerender && !rules.redirect;\n}\nlet payloadCache = null;\nexport async function getNuxtClientPayload() {\n  if (true) {\n    return;\n  }\n  if (payloadCache) {\n    return payloadCache;\n  }\n  const el = (void 0).getElementById(\"__NUXT_DATA__\");\n  if (!el) {\n    return {};\n  }\n  const inlineData = await parsePayload(el.textContent || \"\");\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\n  payloadCache = {\n    ...inlineData,\n    ...externalData,\n    ...(void 0).__NUXT__\n  };\n  return payloadCache;\n}\nexport async function parsePayload(payload) {\n  return await parse(payload, useNuxtApp()._payloadRevivers);\n}\nexport function definePayloadReducer(name, reduce) {\n  if (true) {\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\n  }\n}\nexport function definePayloadReviver(name, revive) {\n  if (false) {\n    console.warn(\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\");\n  }\n  if (false) {\n    useNuxtApp()._payloadRevivers[name] = revive;\n  }\n}\n",
      "start": 1716369332414,
      "end": 1716369332578,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"C:/Users/Anna/Documents/projets-web/BYNO/BYNO/node_modules/nuxt/dist/app/composables/payload.js\"],\n  \"sourcesContent\": [\"import { hasProtocol, joinURL, withoutTrailingSlash } from \\\"ufo\\\";\\r\\nimport { parse } from \\\"devalue\\\";\\r\\nimport { useHead } from \\\"@unhead/vue\\\";\\r\\nimport { getCurrentInstance } from \\\"vue\\\";\\r\\nimport { useNuxtApp, useRuntimeConfig } from \\\"../nuxt.js\\\";\\r\\nimport { useRoute } from \\\"./router.js\\\";\\r\\nimport { getAppManifest, getRouteRules } from \\\"./manifest.js\\\";\\r\\nimport { appManifest, payloadExtraction, renderJsonPayloads } from \\\"#build/nuxt.config.mjs\\\";\\r\\nexport function loadPayload(url, opts = {}) {\\r\\n  if (true || !payloadExtraction) {\\r\\n    return null;\\r\\n  }\\r\\n  const payloadURL = _getPayloadURL(url, opts);\\r\\n  const nuxtApp = useNuxtApp();\\r\\n  const cache = nuxtApp._payloadCache = nuxtApp._payloadCache || {};\\r\\n  if (payloadURL in cache) {\\r\\n    return cache[payloadURL];\\r\\n  }\\r\\n  cache[payloadURL] = isPrerendered(url).then((prerendered) => {\\r\\n    if (!prerendered) {\\r\\n      cache[payloadURL] = null;\\r\\n      return null;\\r\\n    }\\r\\n    return _importPayload(payloadURL).then((payload) => {\\r\\n      if (payload) {\\r\\n        return payload;\\r\\n      }\\r\\n      delete cache[payloadURL];\\r\\n      return null;\\r\\n    });\\r\\n  });\\r\\n  return cache[payloadURL];\\r\\n}\\r\\nexport function preloadPayload(url, opts = {}) {\\r\\n  const payloadURL = _getPayloadURL(url, opts);\\r\\n  useHead({\\r\\n    link: [\\r\\n      { rel: \\\"modulepreload\\\", href: payloadURL }\\r\\n    ]\\r\\n  });\\r\\n}\\r\\nconst extension = renderJsonPayloads ? \\\"json\\\" : \\\"js\\\";\\r\\nfunction _getPayloadURL(url, opts = {}) {\\r\\n  const u = new URL(url, \\\"http://localhost\\\");\\r\\n  if (u.host !== \\\"localhost\\\" || hasProtocol(u.pathname, { acceptRelative: true })) {\\r\\n    throw new Error(\\\"Payload URL must not include hostname: \\\" + url);\\r\\n  }\\r\\n  const hash = opts.hash || (opts.fresh ? Date.now() : \\\"\\\");\\r\\n  return joinURL(useRuntimeConfig().app.baseURL, u.pathname, hash ? `_payload.${hash}.${extension}` : `_payload.${extension}`);\\r\\n}\\r\\nasync function _importPayload(payloadURL) {\\r\\n  if (true || !payloadExtraction) {\\r\\n    return null;\\r\\n  }\\r\\n  const payloadPromise = renderJsonPayloads ? fetch(payloadURL).then((res) => res.text().then(parsePayload)) : import(\\r\\n    /* webpackIgnore: true */\\r\\n    /* @vite-ignore */\\r\\n    payloadURL\\r\\n  ).then((r) => r.default || r);\\r\\n  try {\\r\\n    return await payloadPromise;\\r\\n  } catch (err) {\\r\\n    console.warn(\\\"[nuxt] Cannot load payload \\\", payloadURL, err);\\r\\n  }\\r\\n  return null;\\r\\n}\\r\\nexport async function isPrerendered(url = useRoute().path) {\\r\\n  if (!appManifest) {\\r\\n    return !!useNuxtApp().payload.prerenderedAt;\\r\\n  }\\r\\n  url = withoutTrailingSlash(url);\\r\\n  const manifest = await getAppManifest();\\r\\n  if (manifest.prerendered.includes(url)) {\\r\\n    return true;\\r\\n  }\\r\\n  const rules = await getRouteRules(url);\\r\\n  return !!rules.prerender && !rules.redirect;\\r\\n}\\r\\nlet payloadCache = null;\\r\\nexport async function getNuxtClientPayload() {\\r\\n  if (true) {\\r\\n    return;\\r\\n  }\\r\\n  if (payloadCache) {\\r\\n    return payloadCache;\\r\\n  }\\r\\n  const el = document.getElementById(\\\"__NUXT_DATA__\\\");\\r\\n  if (!el) {\\r\\n    return {};\\r\\n  }\\r\\n  const inlineData = await parsePayload(el.textContent || \\\"\\\");\\r\\n  const externalData = el.dataset.src ? await _importPayload(el.dataset.src) : void 0;\\r\\n  payloadCache = {\\r\\n    ...inlineData,\\r\\n    ...externalData,\\r\\n    ...window.__NUXT__\\r\\n  };\\r\\n  return payloadCache;\\r\\n}\\r\\nexport async function parsePayload(payload) {\\r\\n  return await parse(payload, useNuxtApp()._payloadRevivers);\\r\\n}\\r\\nexport function definePayloadReducer(name, reduce) {\\r\\n  if (true) {\\r\\n    useNuxtApp().ssrContext._payloadReducers[name] = reduce;\\r\\n  }\\r\\n}\\r\\nexport function definePayloadReviver(name, revive) {\\r\\n  if (false && getCurrentInstance()) {\\r\\n    console.warn(\\\"[nuxt] [definePayloadReviver] This function must be called in a Nuxt plugin that is `unshift`ed to the beginning of the Nuxt plugins array.\\\");\\r\\n  }\\r\\n  if (false) {\\r\\n    useNuxtApp()._payloadRevivers[name] = revive;\\r\\n  }\\r\\n}\\r\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1716369332579,
      "end": 1716369332579,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716369332579,
      "end": 1716369332579,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716369332579,
      "end": 1716369332579,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716369332579,
      "end": 1716369332579,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716369332579,
      "end": 1716369332580,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716369332580,
      "end": 1716369332580,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716369332580,
      "end": 1716369332580,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716369332580,
      "end": 1716369332580,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716369332580,
      "end": 1716369332580,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716369332580,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716369332580,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716369332581,
      "end": 1716369332581,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716369332582,
      "end": 1716369332582,
      "order": "normal"
    }
  ]
}
