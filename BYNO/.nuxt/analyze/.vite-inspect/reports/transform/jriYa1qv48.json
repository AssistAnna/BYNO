{
  "resolvedId": "C:/Users/Anna/Documents/Projets webs/BYNO/BYNO/node_modules/nuxt/dist/app/composables/id.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getCurrentInstance, inject } from \"vue\";\r\nimport { useNuxtApp } from \"../nuxt.js\";\r\nimport { clientOnlySymbol } from \"#app/components/client-only\";\r\nconst ATTR_KEY = \"data-n-ids\";\r\nexport function useId(key) {\r\n  if (typeof key !== \"string\") {\r\n    throw new TypeError(\"[nuxt] [useId] key must be a string.\");\r\n  }\r\n  key = key.slice(1);\r\n  const nuxtApp = useNuxtApp();\r\n  const instance = getCurrentInstance();\r\n  if (!instance) {\r\n    throw new TypeError(\"[nuxt] `useId` must be called within a component setup function.\");\r\n  }\r\n  nuxtApp._id ||= 0;\r\n  instance._nuxtIdIndex ||= {};\r\n  instance._nuxtIdIndex[key] ||= 0;\r\n  const instanceIndex = key + \":\" + instance._nuxtIdIndex[key]++;\r\n  if (import.meta.server) {\r\n    const ids = JSON.parse(instance.attrs[ATTR_KEY] || \"{}\");\r\n    ids[instanceIndex] = key + \":\" + nuxtApp._id++;\r\n    instance.attrs[ATTR_KEY] = JSON.stringify(ids);\r\n    return ids[instanceIndex];\r\n  }\r\n  if (nuxtApp.payload.serverRendered && nuxtApp.isHydrating && !inject(clientOnlySymbol, false)) {\r\n    const el = instance.vnode.el?.nodeType === 8 && instance.vnode.el?.nextElementSibling?.getAttribute ? instance.vnode.el?.nextElementSibling : instance.vnode.el;\r\n    const ids = JSON.parse(el?.getAttribute?.(ATTR_KEY) || \"{}\");\r\n    if (ids[instanceIndex]) {\r\n      return ids[instanceIndex];\r\n    }\r\n    if (import.meta.dev && instance.vnode.type && typeof instance.vnode.type === \"object\" && \"inheritAttrs\" in instance.vnode.type && instance.vnode.type.inheritAttrs === false) {\r\n      console.warn(\"[nuxt] `useId` might not work correctly with components that have `inheritAttrs: false`.\");\r\n    }\r\n  }\r\n  return key + \"_\" + nuxtApp._id++;\r\n}\r\n",
      "start": 1716302281553,
      "end": 1716302281780,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716302281780,
      "end": 1716302281780,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { getCurrentInstance, inject } from \"vue\";\r\nimport { useNuxtApp } from \"../nuxt.js\";\r\nimport { clientOnlySymbol } from \"#app/components/client-only\";\r\nconst ATTR_KEY = \"data-n-ids\";\r\nexport function useId(key) {\r\n  if (typeof key !== \"string\") {\r\n    throw new TypeError(\"[nuxt] [useId] key must be a string.\");\r\n  }\r\n  key = key.slice(1);\r\n  const nuxtApp = useNuxtApp();\r\n  const instance = getCurrentInstance();\r\n  if (!instance) {\r\n    throw new TypeError(\"[nuxt] `useId` must be called within a component setup function.\");\r\n  }\r\n  nuxtApp._id ||= 0;\r\n  instance._nuxtIdIndex ||= {};\r\n  instance._nuxtIdIndex[key] ||= 0;\r\n  const instanceIndex = key + \":\" + instance._nuxtIdIndex[key]++;\r\n  if (false) {\r\n    const ids = JSON.parse(instance.attrs[ATTR_KEY] || \"{}\");\r\n    ids[instanceIndex] = key + \":\" + nuxtApp._id++;\r\n    instance.attrs[ATTR_KEY] = JSON.stringify(ids);\r\n    return ids[instanceIndex];\r\n  }\r\n  if (nuxtApp.payload.serverRendered && nuxtApp.isHydrating && !inject(clientOnlySymbol, false)) {\r\n    const el = instance.vnode.el?.nodeType === 8 && instance.vnode.el?.nextElementSibling?.getAttribute ? instance.vnode.el?.nextElementSibling : instance.vnode.el;\r\n    const ids = JSON.parse(el?.getAttribute?.(ATTR_KEY) || \"{}\");\r\n    if (ids[instanceIndex]) {\r\n      return ids[instanceIndex];\r\n    }\r\n    if (false && instance.vnode.type && typeof instance.vnode.type === \"object\" && \"inheritAttrs\" in instance.vnode.type && instance.vnode.type.inheritAttrs === false) {\r\n      console.warn(\"[nuxt] `useId` might not work correctly with components that have `inheritAttrs: false`.\");\r\n    }\r\n  }\r\n  return key + \"_\" + nuxtApp._id++;\r\n}\r\n",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAkpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnrK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACphH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716302281781,
      "end": 1716302281781,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716302281781,
      "end": 1716302281782,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716302281782,
      "end": 1716302281782,
      "order": "normal"
    }
  ]
}
